name: 🐍 Backend CI

on:
  push:
    branches: [ "main", "dev"]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ "main", "dev"]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  workflow_call:
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  backend-test:
    name: 🧪 Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: './backend/requirements.txt'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black bandit safety

      - name: 🔍 Run linting (flake8)
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,__pycache__,.git

      - name: 🎨 Check code formatting (black)
        run: black --check --diff .

      - name: 🔒 Security scan (bandit)
        run: bandit -r . -f json -o bandit-report.json || true

      - name: 🛡️ Check dependencies (safety)
        run: safety check --json --output safety-report.json || true

      - name: 🧪 Run tests with coverage
        run: pytest --cov=. --cov-report=xml --cov-report=term

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

      - name: 📊 Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            backend/bandit-report.json
            backend/safety-report.json
